@model ServiceResponse<GetVehicleDto>

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<hr/>
<div class="row">
    <div class="col-md-4">
        
       <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
               
               @Html.HiddenFor(model => model.Data.id)

            <div class="form-group">
                <label asp-for="Data.name" class="control-label"></label>
                <input asp-for="Data.name" class="form-control"  />
               
                <span asp-validation-for="Data.name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Data.RtoNumber" class="control-label"></label>
                <input asp-for="Data.RtoNumber" class="form-control" />
                <span asp-validation-for="Data.RtoNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Data.Description" class="control-label"></label>
                <input asp-for="Data.Description" class="form-control" />
                <span asp-validation-for="Data.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Data.fuel" class="control-label"></label>
                <input asp-for="Data.fuel" class="form-control" />
                <span asp-validation-for="Data.fuel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="List">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
